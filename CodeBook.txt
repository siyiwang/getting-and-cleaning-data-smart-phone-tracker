CodeBook:

This CodeBook will describe the variables, the data and transformation I have performed on source datasets. 

Human Activity Recognition Using Smartphones Dataset

The experiments have been carried out with a group of 30 volunteers within an age bracket of 19-48 years. Each person performed six activities (WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING) wearing a smartphone (Samsung Galaxy S II) on the waist. Using its embedded accelerometer and gyroscope, we captured 3-axial linear acceleration and 3-axial angular velocity at a constant rate of 50Hz. The experiments have been video-recorded to label the data manually. The obtained dataset has been randomly partitioned into two sets, where 70% of the volunteers was selected for generating the training data and 30% the test data. 

The sensor signals (accelerometer and gyroscope) were pre-processed by applying noise filters and then sampled in fixed-width sliding windows of 2.56 sec and 50% overlap (128 readings/window). The sensor acceleration signal, which has gravitational and body motion components, was separated using a Butterworth low-pass filter into body acceleration and gravity. The gravitational force is assumed to have only low frequency components, therefore a filter with 0.3 Hz cutoff frequency was used. From each window, a vector of features was obtained by calculating variables from the time and frequency domain. See 'features_info.txt' for more details.

For each record it is provided:

======================================

- Triaxial acceleration from the accelerometer (total acceleration) and the estimated body acceleration.

- Triaxial Angular velocity from the gyroscope. 

- A 561-feature vector with time and frequency domain variables. 

- Its activity label. 

- An identifier of the subject who carried out the experiment.


The dataset includes the following files:

=========================================

- 'README.txt'
- 'features_info.txt': Shows information about the variables used on the feature vector.
- 'features.txt': List of all features.
- 'activity_labels.txt': Links the class labels with their activity name.
- 'train/X_train.txt': Training set.
- 'train/y_train.txt': Training labels.
- 'test/X_test.txt': Test set.
- 'test/y_test.txt': Test labels.

Notes:
- Features are normalized and bounded within [-1,1].
- Each feature vector is a row on the text file.

Variables:

The complete list of variables of each feature vector is available in 'features.txt'.

The features selected for this database come from the accelerometer and gyroscope 3-axial raw signals tAcc-XYZ and tGyro-XYZ. These time domain signals (prefix 't' to denote time) were captured at a constant rate of 50 Hz. Then they were filtered using a median filter and a 3rd order low pass Butterworth filter with a corner frequency of 20 Hz to remove noise. Similarly, the acceleration signal was then separated into body and gravity acceleration signals (tBodyAcc-XYZ and tGravityAcc-XYZ) using another low pass Butterworth filter with a corner frequency of 0.3 Hz. 

Subsequently, the body linear acceleration and angular velocity were derived in time to obtain Jerk signals (tBodyAccJerk-XYZ and tBodyGyroJerk-XYZ). Also the magnitude of these three-dimensional signals were calculated using the Euclidean norm (tBodyAccMag, tGravityAccMag, tBodyAccJerkMag, tBodyGyroMag, tBodyGyroJerkMag). 

Finally a Fast Fourier Transform (FFT) was applied to some of these signals producing fBodyAcc-XYZ, fBodyAccJerk-XYZ, fBodyGyro-XYZ, fBodyAccJerkMag, fBodyGyroMag, fBodyGyroJerkMag. (Note the 'f' to indicate frequency domain signals). 

These signals were used to estimate variables of the feature vector for each pattern:  

'-XYZ' is used to denote 3-axial signals in the X, Y and Z directions.

tBodyAcc-XYZ

tGravityAcc-XYZ

tBodyAccJerk-XYZ

tBodyGyro-XYZ

tBodyGyroJerk-XYZ

tBodyAccMag

tGravityAccMag

tBodyAccJerkMag

tBodyGyroMag

tBodyGyroJerkMag

fBodyAcc-XYZ

fBodyAccJerk-XYZ

fBodyGyro-XYZ

fBodyAccMag

fBodyAccJerkMag

fBodyGyroMag

fBodyGyroJerkMag

The set of variables that were estimated from these signals are: 

mean(): Mean value

std(): Standard deviation

mad(): Median absolute deviation 

max(): Largest value in array

min(): Smallest value in array

sma(): Signal magnitude area

energy(): Energy measure. Sum of the squares divided by the number of values. 

iqr(): Interquartile range 

entropy(): Signal entropy

arCoeff(): Autorregresion coefficients with Burg order equal to 4

correlation(): correlation coefficient between two signals

maxInds(): index of the frequency component with largest magnitude

meanFreq(): Weighted average of the frequency components to obtain a mean frequency

skewness(): skewness of the frequency domain signal 

kurtosis(): kurtosis of the frequency domain signal 

bandsEnergy(): Energy of a frequency interval within the 64 bins of the FFT of each window.

angle(): Angle between to vectors.


Additional vectors obtained by averaging the signals in a signal window sample. These are used on the angle() variable:

gravityMean

tBodyAccMean

tBodyAccJerkMean

tBodyGyroMean

tBodyGyroJerkMean

=========================================

In this run_analysis.R code, it remove “－”，”( )-“ and “.” in column names to make it clear and meaningful. The change is listed below:


*Rawdata_name*	                   *Final_name*
subject	                           subject
activity	                   activity
tBodyAcc-mean()-X	           tBodyAccmeanX
tBodyAcc-mean()-Y	           tBodyAccmeanY
tBodyAcc-mean()-Z	           tBodyAccmeanZ
tBodyAcc-std()-X	           tBodyAccstdX
tBodyAcc-std()-Y	           tBodyAccstdY
tBodyAcc-std()-Z	           tBodyAccstdZ
tGravityAcc-mean()-X	           tGravityAccmeanX
tGravityAcc-mean()-Y	           tGravityAccmeanY
tGravityAcc-mean()-Z	           tGravityAccmeanZ
tGravityAcc-std()-X	           tGravityAccstdX
tGravityAcc-std()-Y	           tGravityAccstdY
tGravityAcc-std()-Z	           tGravityAccstdZ
tBodyAccJerk-mean()-X	           tBodyAccJerkmeanX
tBodyAccJerk-mean()-Y	           tBodyAccJerkmeanY
tBodyAccJerk-mean()-Z	           tBodyAccJerkmeanZ
tBodyAccJerk-std()-X	           tBodyAccJerkstdX
tBodyAccJerk-std()-Y	           tBodyAccJerkstdY
tBodyAccJerk-std()-Z	           tBodyAccJerkstdZ
tBodyGyro-mean()-X	           tBodyGyromeanX
tBodyGyro-mean()-Y	           tBodyGyromeanY
tBodyGyro-mean()-Z	           tBodyGyromeanZ
tBodyGyro-std()-X	           tBodyGyrostdX
tBodyGyro-std()-Y	           tBodyGyrostdY
tBodyGyro-std()-Z	           tBodyGyrostdZ
tBodyGyroJerk-mean()-X	           tBodyGyroJerkmeanX
tBodyGyroJerk-mean()-Y	           tBodyGyroJerkmeanY
tBodyGyroJerk-mean()-Z	           tBodyGyroJerkmeanZ
tBodyGyroJerk-std()-X	           tBodyGyroJerkstdX
tBodyGyroJerk-std()-Y	           tBodyGyroJerkstdY
tBodyGyroJerk-std()-Z	           tBodyGyroJerkstdZ
tBodyAccMag-mean()	           tBodyAccMagmean
tBodyAccMag-std()	           tBodyAccMagstd
tGravityAccMag-mean()	           tGravityAccMagmean
tGravityAccMag-std()	           tGravityAccMagstd
tBodyAccJerkMag-mean()	           tBodyAccJerkMagmean
tBodyAccJerkMag-std()	           tBodyAccJerkMagstd
tBodyGyroMag-mean()	           tBodyGyroMagmean
tBodyGyroMag-std()	           tBodyGyroMagstd
tBodyGyroJerkMag-mean()	           tBodyGyroJerkMagmean
tBodyGyroJerkMag-std()	           tBodyGyroJerkMagstd
fBodyAcc-mean()-X	           fBodyAccmeanX
fBodyAcc-mean()-Y	           fBodyAccmeanY
fBodyAcc-mean()-Z	           fBodyAccmeanZ
fBodyAcc-std()-X	           fBodyAccstdX
fBodyAcc-std()-Y	           fBodyAccstdY
fBodyAcc-std()-Z	           fBodyAccstdZ
fBodyAccJerk-mean()-X	           fBodyAccJerkmeanX
fBodyAccJerk-mean()-Y	           fBodyAccJerkmeanY
fBodyAccJerk-mean()-Z	           fBodyAccJerkmeanZ
fBodyAccJerk-std()-X	           fBodyAccJerkstdX
fBodyAccJerk-std()-Y	           fBodyAccJerkstdY
fBodyAccJerk-std()-Z	           fBodyAccJerkstdZ
fBodyGyro-mean()-X	           fBodyGyromeanX
fBodyGyro-mean()-Y	           fBodyGyromeanY
fBodyGyro-mean()-Z	           fBodyGyromeanZ
fBodyGyro-std()-X	           fBodyGyrostdX
fBodyGyro-std()-Y	           fBodyGyrostdY
fBodyGyro-std()-Z	           fBodyGyrostdZ
fBodyAccMag-mean()	           fBodyAccMagmean
fBodyAccMag-std()	           fBodyAccMagstd
fBodyBodyAccJerkMag-mean()	   fBodyBodyAccJerkMagmean
fBodyBodyAccJerkMag-std()	   fBodyBodyAccJerkMagstd
fBodyBodyGyroMag-mean()	           fBodyBodyGyroMagmean
fBodyBodyGyroMag-std()	           fBodyBodyGyroMagstd
fBodyBodyGyroJerkMag-mean()	   fBodyBodyGyroJerkMagmean
fBodyBodyGyroJerkMag-std()	   fBodyBodyGyroJerkMagstd

=========================================


Data:

In “UCI HAR Dataset”, it includes two randomly partitioned data folder “train” and “ test”. Under each folder, it contains three important data sets. The following explanation is be based on “train” folder.
1.X_train.txt: all measurement data without identified volunteer ID or activity it was collected on.
2.subject.train.txt: a data set indicating the respective volunteer ID for the X_train.txt file.
3.y_train.txt: a data set indicting the respective activity ID for the X_train.txt file.

The above three files are the files I used to reformat test data set with corresponding measurement variables, volunteer ID and activity ID. The same method is applied for train data folder.

=========================================

Data Transformation:

1. This script depends on reshape2 and data.table libraries.
2. Load both test and train data sets.
3. Load features and activity file, convert them into a list. 
4. Use feature's information as col names and activity as separate column into test/train data sets.
5. Merge train and test datasets.
6. Extract the columns specific for mean() and std() calculation.
7. Remove “－”，”( )-“ and “.” from column names. 
8. Replace activity column's information with 6 specific contents.
9. Perform reshape on final dataset and save. 







